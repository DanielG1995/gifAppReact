{"version":3,"sources":["componentes/AddCategoria.js","helpers/getGifs.js","componentes/GifGridItem.js","componentes/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAI1C,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,0FAG4EC,UAAUH,GAHtF,sBAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,IAASU,GAAY,EAAhBD,GAAgB,EAAZC,OAEnC,OACI,qBAAKI,UAAU,0DAAf,SACI,mCACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,kCAAKA,EAAL,aCJHO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAItB,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WAENxB,EAAQC,GAAWwB,MAAK,SAAAC,GACpBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAGGqB,EDf2BK,CAAa1B,GAAvCoB,EAAR,EAAQA,QAAeP,EAAvB,EAAiBN,KAIjB,OACI,qCACI,oBAAIS,UAAU,qDAAd,SAAoEhB,IACnEoB,GAAW,mBAAGJ,UAAU,oDAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEYtBgB,EA3BM,WAGjB,MAAoCzC,mBAAS,CAAC,QAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,UAAWA,GADNA,Y,MCjBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1b69271.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cate => [inputValue, ...cate]);\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (categoria) => {\r\n\r\n   \r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=QGQiZOHgMQHIIlVP6XPuG2sd0nW72pYL&q=${encodeURI(categoria)}&limit=10`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ url, id, title }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate-delay:2s\">\r\n            <center>\r\n                <img src={url} alt={title} />\r\n                <p> {title} </p>\r\n            </center>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { loading, data: images } = useFetchGifs(categoria);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn animate-delay:2s\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash animate-delay:2s\">Loading...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(categoria).then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        });\r\n\r\n    }, [categoria])\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './componentes/AddCategoria';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categorias = ['One Punch','DBZ','Death Note','Naruto']\r\n    const [categorias, setCategorias] = useState(['DBZ']);\r\n\r\n    //const handelAdd = () => {\r\n    //    setCategorias([...categorias,'....']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map((categoria) =>\r\n                        <GifGrid\r\n                            key={categoria}\r\n                            categoria={categoria} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}